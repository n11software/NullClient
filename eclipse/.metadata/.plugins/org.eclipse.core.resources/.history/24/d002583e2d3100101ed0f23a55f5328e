package n11client.gui.hud;

import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.gui.GuiSlot;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class ScrollableMenu extends GuiScreen {
    private ScrollList scrollList;
    private final List<String> entries = new ArrayList<>();
    private final String title = "Scrollable Button List";

    @Override
    public void initGui() {
        super.initGui();

        entries.clear();
        for (int i = 1; i <= 50; i++) {
            entries.add("Button " + i);
        }

        // Create scroll list with top padding 30 and bottom padding 30
        scrollList = new ScrollList(mc, width, height, 30, height - 30, 20);
    }

    @Override
    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
        super.mouseClicked(mouseX, mouseY, mouseButton);

        int clickedIndex = scrollList.getSlotIndexFromScreenCoords(mouseX, mouseY);
        if (clickedIndex >= 0) {
            scrollList.elementClicked(clickedIndex, false, mouseX, mouseY);
        }
    }

    @Override
    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
        super.drawDefaultBackground();

        // Draw the title centered at the top
        drawCenteredString(mc.fontRendererObj, title, width / 2, 15, 0xFFFFFF);

        // Draw the scroll list (buttons)
        scrollList.drawScreen(mouseX, mouseY, partialTicks);

        // Draw other screen elements (buttons, etc.) - none here, but call anyway
        super.drawScreen(mouseX, mouseY, partialTicks);
    }

    private class ScrollList extends GuiSlot {
        public ScrollList(net.minecraft.client.Minecraft mc, int width, int height, int top, int bottom, int slotHeight) {
            super(mc, width, height, top, bottom, slotHeight);
        }

        @Override
        protected int getSize() {
            return entries.size();
        }

        @Override
        protected void elementClicked(int index, boolean doubleClick, int mouseX, int mouseY) {
            System.out.println("Clicked: " + entries.get(index));
        }

        @Override
        protected boolean isSelected(int index) {
            return false; // No selection highlight
        }

        @Override
        protected void drawBackground() {
            // No background fill to keep it transparent
        }

        @Override
        protected void drawSlot(int index, int x, int y, int slotHeight, int mouseX, int mouseY) {
            // Draw the button text centered vertically in the slot
            drawCenteredString(mc.fontRendererObj, entries.get(index), width / 2, y + 6, 0xFFFFFF);
        }
    }

    @Override
    public boolean doesGuiPauseGame() {
        return true; // Pauses the game when this GUI is open
    }
}
